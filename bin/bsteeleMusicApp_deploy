#!/bin/tcsh
#set echo; set verbose

echo $0\:

set www=/var/www/html/public_html
set app=bsteeleMusicApp
set localDst=$www/$app
set dst=gs://www.bsteele.com/$app
set git=~/github/bsteele_music_flutter


#   verify that the pi is present
sshpi echo yes
set stat=$status
if ( $stat != 0 ) then
	echo "bob's pi is missing"
	exit $stat
endif

#   verify that the mac is present
ssh bobsmac.local echo yes
set stat=$status
if ( $stat != 0 ) then
	echo bobs mac is missing
	exit $stat
endif


#	prep for subsequent sudo in war file install
#	this forces the sudo early in the deployment process
echo on bob64:
sudo date


#	compile for release
cd $git
flutter_clean	#	prep
bin/bsteeleMusicApp_war
if ( $status != 0 ) exit -1

#	deploy locally (typically re-deploy)
bin/bsteeleMusicApp_localWarInstall

#	compile for android
bin/bsteeleMusicApp_apk
if ( $status != 0 ) exit -1

#	compile for native arm64
bin/bsteeleMusicApp_remotePi
if ( $status != 0 ) exit -1

#	compile for native macos x86
bin/bsteeleMusicApp_remoteDmg
if ( $status != 0 ) exit -1

#	compile for native linux x86
bin/bsteeleMusicApp_linux
if ( $status != 0 ) exit -1

#	deploy locally the download page
bin/bsteeleMusicApp_downloadPage
if ( $status != 0 ) exit -1

#	copy local deployment to the web server
bsteele_auth
gsutil -m rsync -d -R -x '.*\.songlyrics\$' $localDst/ $dst 	#	source needs the /
if ( $status != 0 ) exit -1
gsutil -m -q setmeta -h "Cache-Control:public, max-age=60" -r $dst
if ( $status != 0 ) exit -1
gsutil -m -q acl -r ch -u AllUsers:R $dst
if ( $status != 0 ) exit -1

~/github/allSongs.songlyrics/bin/lyrics_update

//  see that the web sees the update
bin/bsteeleMusicApp_gs_utcDate

echo try:  http://bsteele.com/$app

cd $git
bin/bsteeleMusicApp_stage
