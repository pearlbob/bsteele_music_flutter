#!/bin/tcsh
#set echo; set verbose

set debug=0
set isBeta=1
set app=bsteeleMusicApp
set flavor=beta

while ( $#argv > 0 )
	switch ( $1 )
	case '-a':
	case '-alpha':
		set isBeta=1
		set flavor=alpha
		shift
		continue;
#	case '-beta':
#		set isBeta=1
#		shift
#		continue;
	case '-d':		#	debug
	case '-debug':
		set debug=1
		shift
		continue;
	default:
		echo unknown argument: $1
		exit -1;
		breaksw;
	endsw

	break;
end


if ( $debug != 0 ) then
	set echo; set verbose
endif

set dst=/var/www/html/public_html/$app
if ( $isBeta != 0 ) then
	set dst=$dst/$flavor
endif
set git=~/github/bsteele_music_flutter
set target=$git/build/web
cd $git

##	build the release version
flutter clean
utcDate > lib/assets/utcDate.txt
#flutter config --enable-web
flutter build web

#	clear the last one
mkdir -p $dst
rm  -rf $dst/*

#	copy to localhost website
cp -r build/web/* $dst

#	send to flavor's web location
set gs=gs://www.bsteele.com/$app/$flavor

bsteele_auth
gsutil -m -q rsync -d -R -x 'allSongs\.songlyrics$' $dst/ $gs 	#	source needs the /
gsutil -m -q setmeta -h "Cache-Control:public, max-age=60" -r $gs
gsutil -m -q acl -r ch -u AllUsers:R $gs

echo test http://www.bsteele.com/$app/$flavor
ls -l lib/assets/utcDate.txt
cat lib/assets/utcDate.txt


#	incorporate the beta to the legacy .war file
set war=build/bsteeleMusicApp.war
set gswar=gs://www.bsteele.com/$app/bsteeleMusicApp.war
rm -rf $war
cp ../bsteeleMusicApp/target/bsteeleMusicApp.war $war
rm -rf build/beta
mkdir build/beta
cp -r build/web/* build/beta
jar -uf $war -C build beta
rm -rf build/beta

#	ship it to distribution point for raspberry pi's
#	already done above: bsteele_auth
gsutil cp $war $gswar
gsutil -q acl -r ch -u AllUsers:R  $gswar
